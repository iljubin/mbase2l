(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[5],{

/***/ 28:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return onMarkerClicked; });
/* harmony import */ var _libs_exports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _app_globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);



/**
 * 
 * @param {object} marker 
 * @param {object} row 
 * @param {object} op
 * @param {object} [op.dataTable] DataTable component (used for collecting formated and translated data)
 * @param {object} op.moduleKey
 * @param {object} [op.moduleAttributes] module attributes definitions (not needed if op.dataTable is present)
 * @param {object} op.moduleAttributes.attributes
 * @param {object} op.moduleAttributes.attributesKeyed
 * @param {object} [op.moduleAttributes.refValues]
 * 
 */

const onMarkerClicked = async (marker, row, op) => {

    const [
        ImageArray,
        mutils,
        ImageViewer
    ] = await Promise.all([
        _libs_exports__WEBPACK_IMPORTED_MODULE_0__["ImageArray"](),
        _libs_exports__WEBPACK_IMPORTED_MODULE_0__["mutils"](),
        _libs_exports__WEBPACK_IMPORTED_MODULE_0__["ImageViewer"]()
    ]);

    const {dataTable, moduleKey, moduleAttributes} = op;
        
    const rowInx = (row && row.__rowInx) || row;

    if (rowInx) {
        
        let photos = null;
        let popupContent = '';
        
        if (dataTable) { //use dataTable formatted and translated data if dataTable is defined
            const lines = [];
            dataTable.getRowCellsFormattedData(rowInx).map(o => {
                if (o.data !== '_photos') {
                    lines.push(`<b>${o.title}:</b> ${o.value}`);
                }
            });
            popupContent = lines.join('<br>');
        }
        else {
            popupContent = mutils.attributeValuesToHtml(row, moduleAttributes.attributesKeyed,'<br>',moduleAttributes.attributes.map(a=>a.key_name_id), true, moduleAttributes.refValues, ['_photos']);
        }

        if (row._photos) {
            photos = row._photos && JSON.parse(row._photos);
        }
        
        const popup = marker.getPopup();
        popup.setContent(popupContent);

        if (photos) {
            const $div = $(popup.getElement()).find('.leaflet-popup-content:first');
            const cmp = new ImageArray.default({
                mediaRoot: _app_globals__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].mediaRoot+'/private/'+moduleKey, 
                skipAddButton: true,
                onClick: async () => {
                    await ImageViewer.default({
                        data: photos.map(p => ({
                            file_hash:p,
                            properties: '{}'
                        })),
                        mediaRootFolder: _app_globals__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].mediaRoot+'/private/'+moduleKey
                    });
                }
            });
            $div.append(cmp.$el());
            cmp.val(photos);
        }

        return popup;
    }
}

/***/ }),

/***/ 34:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _app_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _helpers_onMarkerClicked__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);



let exports, utils, mutils, ComponentManager, Button, Map;
/**
 * 
 * @param {object} op 
 * @param {string} op.moduleKey
 * @param {boolean} op.defaultRecordEditor use default modal dialog for record editor if true, else use external editor (redirect to edit page)
 */
function Mbase2ModuleIndex(op ={}) {
    this.op=op;
    this.op.viewName = op.viewName || op.dataTable; //show data from dataTable if viewName is not defined
    this.$parent = op.$parent;
    this.op.schema = op.schema || 'mb2data';
}

function compare( a, b, p ) {
    if ( a[p] < b[p] ){
      return -1;
    }

    if ( a[p] > b[p] ){
      return 1;
    }

    return 0;
}

Mbase2ModuleIndex.prototype.init = async function() {
    exports = await Promise.resolve(/* import() */).then(__webpack_require__.bind(null, 7));
    [   utils,
        mutils,
        ComponentManager,
        Button,
        Map
    ] = this.imports = await Promise.all([
        exports.utils(),
        exports.mutils(),
        exports.ComponentManager(),
        exports.Button(),
        exports.Map()
    ]);

    const {$content, $header} = this.op;

    const t = utils.t;

    const unameField = this.op.unameField || '_uname';

    const moduleKey = this.op.moduleKey;

    this.op.adminRoles = this.op.adminRoles || ['administrator', `mbase2_${moduleKey}_admin`];

    this.isAdmin = _app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].user.roles.find(role => this.op.adminRoles.indexOf(role) !==-1) ? true : false;

    const cm = new ComponentManager.default();

    const $headerButtonGroup = $('<div/>',{style: 'display: flex'});

    this.op.buttons && this.op.buttons.map(btn => {
        const btnCmp = new Button.default({
            label: btn.label,
            iconClass: btn.iconClass,
            type: 'btn-primary',
            classes: 'btn-lg',
            onClick: btn.key==='new' ? () => {
                const pathname = utils.rtrimSlash(window.location.pathname);
                utils.hrefClick(pathname+btn.path);
            } : btn.onClick
        }); 
        btnCmp.$el().css('margin-left', '10px');
        $headerButtonGroup.append(btnCmp.$el());
    })
    
    $header.html(mutils.moduleHeader(this.op.title,null,$headerButtonGroup));

    const $map = $('<div/>', {style:"height:calc(63vh - 142px); margin-bottom:22px"});
    !this.op.withoutMap && $content.append($map);

    let dataTable = this.table = null;

    //TODO: pass attributes
    const mapComponent = !this.op.withoutMap && new Map.default({
        $container: $map,
        onMarkerClicked: (marker, data) => {Object(_helpers_onMarkerClicked__WEBPACK_IMPORTED_MODULE_1__[/* onMarkerClicked */ "a"])(marker, data, {
            dataTable,
            moduleKey
        })}
    });

    let moduleVariables = this.op.variables || await mutils.getModuleVariables(this.op.moduleKey, true, false);

    this.moduleVariables = [...moduleVariables];

    if (this.op.additionalVariables) {
        moduleVariables = await this.op.additionalVariables(moduleVariables);
    }
    
    const tableRecordsOptions = await mutils.generalTableRecordsOptions($content, this.op.moduleKey, moduleVariables); //mutils.generalTableRecordsOptions also returns reference values. If you filter variables before this function you loose the referenced values for e.g. batch import form

    const skipVariables = this.op.skipVariables || [];

    const variables = tableRecordsOptions.variablesAttributes = moduleVariables.filter(v => skipVariables.indexOf(v.key_name_id)===-1 && v.visible_in_table === true && v.visible === true);

    const columns = variables.map(v => v.key_name_id);

    const recordTimeStamps = this.op.recordTimeStamps === undefined ? false : this.op.recordTimeStamps;

    if (recordTimeStamps) {
        variables.findIndex(v => v.key_name_id === 'date_record_created') === -1 && variables.push(mutils.createVariableDefinition('date_record_created', t`Record created`, 'timestamp'));
        variables.findIndex(v => v.key_name_id === 'date_record_modified') === -1 && variables.push(mutils.createVariableDefinition('date_record_modified', t`Record modified`, 'timestamp'));
    }
    
    let batchOptionsModel = null;

    if (this.op.batchOptionsModel) {
        batchOptionsModel = this.op.batchOptionsModel(moduleVariables);
    }
    else {
        batchOptionsModel = moduleVariables.filter(a => a.dbcolumn === true && a.importable === true)
                            .sort((a,b) => compare(a,b,'weight_in_import'));
    }

    tableRecordsOptions.batchOptions = {
        model: {
            [this.op.moduleKey]: batchOptionsModel
        }
    }
    
    tableRecordsOptions.cm = cm;
    tableRecordsOptions.saveOptions = this.op.saveOptions || {};
    tableRecordsOptions.sortVariables = this.op.sortVariables!==undefined ? this.op.sortVariables : false;
    tableRecordsOptions.splitRequiredAndOptionalAttributesWhenSorting = this.op.splitRequiredAndOptionalAttributesWhenSorting;
    tableRecordsOptions.url = _app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].apiRoot + `/${this.op.schema}/${this.op.viewName}`; 
    tableRecordsOptions.urlForDelete = this.op.urlForDelete;
    tableRecordsOptions.skipId = true;
    tableRecordsOptions.deletable = this.op.deletable !== undefined ? this.op.deletable : (this.isAdmin ? true : false);
    tableRecordsOptions.disableEdit = this.op.disableEdit !== undefined ? this.op.disableEdit : false;
    tableRecordsOptions.editRecordModel = this.op.editRecordModel;
    tableRecordsOptions.select = this.op.select;
    tableRecordsOptions.tableName = this.op.tableName || this.op.moduleKey;

    tableRecordsOptions.rowEditOptions = row => [true, tableRecordsOptions.deletable && row.__deletable]
    
    const pathname = utils.rtrimSlash(window.location.pathname);
    
    tableRecordsOptions.externalEditRecord = this.op.defaultRecordEditor ? false : (row) => {
        utils.hrefClick(pathname+`${this.op.singleRecordPath}?fid=`+row.id);
    }

    tableRecordsOptions.tableOptions = {
        onRowSelected: this.op.onRowSelected,
        scrollY: this.op.withoutMap ? 'calc(85vh - 142px)':'calc(35vh - 142px)',
        exportButtons: false,
        scrollCollapse: false,
        __icons: this.op.withoutMap ? [] : [
            {
                action: 'zoom-to-marker',
                class: 'map',
                style: 'margin-left:5px',
                onClick: (data) => {
                    const marker = data.__marker;
                    marker && mapComponent.zoomToMarker(marker, data);
                }
            }
        ]
    }

    if (this.op.hideColumnsFromTable) {
        tableRecordsOptions.tableOptions.hideColumns = [...this.op.hideColumnsFromTable];
    }

    tableRecordsOptions.btn_add_record = false;
    tableRecordsOptions.btn_batch_import = false;

    /**
     * Formats the date in record time stamps
     * Adds __deletable property - __deletable is used to show trash can icon
     * 
     * @param {array} data raw data
     * @returns {array} preprocessed data
     */

    tableRecordsOptions.preprocessTableData = (data) => {

        //mutils.convertJsonToObjects(data, variables);

        data.map((r,inx) => {
            const d = r;

            r.__deletable = this.isAdmin || _app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].user.uid == r[unameField];
            
            columns.map(c => r[c] = d[c] === undefined ? null : d[c]);

            if (recordTimeStamps) {
                d.date_record_created = d.date_record_created && moment.utc(new Date(d.date_record_created+'Z')).format('YYYY-MM-DD HH:mm:ss');
                d.date_record_modified = d.date_record_modified && moment.utc(new Date(d.date_record_modified+'Z')).format('YYYY-MM-DD HH:mm:ss');
            }
        });

        if (this.op.preprocessTableData) {
            data = this.op.preprocessTableData(data) || data;
        }

        return data;
    }

    tableRecordsOptions.onTableCreated = (table, data) => {
        if (mapComponent) {
            dataTable = this.table = table;
            mapComponent.addLayer(data);
        }
    }

    const recordsTable = await __webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(null, 10));
    const res = await recordsTable.default(tableRecordsOptions);
    return res;
}

/* harmony default export */ __webpack_exports__["default"] = (Mbase2ModuleIndex);

/***/ })

}]);