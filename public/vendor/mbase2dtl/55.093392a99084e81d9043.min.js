(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[55],{

/***/ 51:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function DropDown(op={}) {
    this.op = op;
    const id = ('ddid-'+Math.random()).replace('0.','');
    const $el = $('<div class="dropdown"></div>');
    const classes = op.classes ? op.classes : '';

    const $button = $(`
        <button class="btn ${classes} btn-default dropdown-toggle" type="button" id="${id}" data-toggle="dropdown">
            <span>${op.label}</span>
            <span class="caret"></span>
        </button>
    `);
    
    const $label = this.$label = $button.find('span:first');

    const $ul = $(`<ul class="dropdown-menu" role="menu" aria-labelledby="${id}"></ul>`);

    op.items.map(item => {
        const $li = $(`<li data-id="${item.key}" role="presentation"><a role="menuitem" tabindex="-1" href="#">${item.label}</a></li>`);
        if (op.onClick) {
            $li.on('click', function() {
                op.updateButtonLabel && $label.text(item.label) && $label.data('key', item.key);
                return op.onClick(item, $(this));
            });
        }
        $ul.append($li);
    });

    $el.append($button);
    $el.append($ul);

    this.$el = () => $el;
}

DropDown.prototype.val = function(key) {
    if (key!==undefined) {
        const item = this.op.items.find(item => item.key == key);
        if (item) {
            this.$label.text(item.label);
            this.$label.data('key', item.key);
        }

        return;
    }

    return this.$label.data('key');
}

/* harmony default export */ __webpack_exports__["default"] = (DropDown);

/***/ })

}]);