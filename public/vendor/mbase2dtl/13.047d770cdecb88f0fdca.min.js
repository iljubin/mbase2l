(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[13],{

/***/ 72:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Returns static definitions of variables (cf. mbase2.module_variables) for pages which are not counted as mbase2 modules
 * 
 * @param {*} exports 
 * @param {*} globals 
 * @returns {Object}
 */
/* harmony default export */ __webpack_exports__["default"] = (function (exports, globals) {
    
    return {
        module_variables: (op) => [
            {
                key_name_id: 'module_id',
                _component: {
                    import: () => exports.Storage()
                }
            },
            {
                key_data_type_id: 'code_list_reference',
                key_name_id: 'name_id',
                ref: 'variables',
                read_only: true
            },
            {
                key_data_type_id: 'code_list_reference',
                key_name_id: 'data_type_id',
                ref: 'data_types',
                _component: {
                    default: true,
                    additionalComponentOptions: {
                      onSelect: op.onDataTypeSelected,
                      read_only: true  
                    }
                }
            },
            {
                key_data_type_id: 'reference',
                key_name_id: 'ref',
                _component: {
                    default: true,
                    onComponentAdded: component => {
                        component.$el().hide()
                    }
                }
            },
            {
                key_data_type_id: 'boolean',
                key_name_id: 'required'
            },
            {
                key_data_type_id: 'boolean',
                key_name_id: 'unique_constraint',
                read_only: true
            },
            {
                key_data_type_id: 'boolean',
                key_name_id: 'visible_in_table'
            },
            {
                key_data_type_id: 'integer',
                key_name_id: 'weight'
            },
            {
                key_data_type_id: 'boolean',
                key_name_id: 'visible'
            }
        ],
        code_list_options: async () => {
            const utils = await exports.utils();
            const languages = await utils.request(globals.apiRoot + '/code_list_options?:list_key=languages');
            const t = utils.t;
            const languageKeys = languages.map(lang => lang.key);
            const languageKeysAttributes = languageKeys.map(key => ({label: key, key: key}));

            return [
                {
                    key_name_id: 'list_id',
                    _component: {
                        import: () => exports.Storage()
                    }
                },
                {
                    key_data_type_id: 'text',
                    key_name_id: 'key',
                    _component: {
                        default: true,
                        additionalComponentOptions: {
                          required: true  
                        }
                    }
                },
                {
                    key_data_type_id: 'json',
                    key_name_id: 'translations',
                    _op:{
                        attributes: languageKeysAttributes
                    }
                }
            ];
        } 
    }
});

/***/ })

}]);