(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[4],{

/***/ 26:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _app_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);


/* harmony default export */ __webpack_exports__["default"] = (async op => {

    const {refValues, $parent, tableName, key_id} = op;
    let {variables} = op;

    if (!variables) return;

    if (op.skipVariables) {
        variables = variables.filter(v => op.skipVariables.indexOf(v.key_name_id)===-1);
    }

    variables = variables.filter(v => v.visible_in_table === true);

    if (op.additionaComponentOptions) {
        Object.keys(op.additionaComponentOptions).map(key => {
            const attribute = variables.find(v => v.key_name_id === key);
            if (attribute) {
                /**
                 * this adds additional options to the attribute definition
                 */
                attribute._component = {
                    default: true,  //use default component for the data type
                    additionalComponentOptions: op.additionaComponentOptions[key]
                }
            }
        })
    }

    if (op.componentInitialization) {
        Object.keys(op.componentInitialization).map(key => {
            const attribute = variables.find(v => v.key_name_id === key);
            if (attribute) {
                attribute._component = Object.assign(attribute._component || {default: true}, {onComponentAdded: op.componentInitialization[key]});
            }
        });
    }

    const schema = op.schema || 'mb2data';
    
    const tableRecordsOptions = Object.assign({
        $parent: $parent,
        tableName: tableName,
        refValues: refValues,
        variablesAttributes: variables, 
        saveOptions: {
            rootUrl: _app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].apiRoot + '/' + schema
        },
        url: _app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].apiRoot + `/${schema}/${op.view || tableName}/language/${_app_globals__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].language}`,
        batchOptions: {
            model: {[tableName]: variables}
        }
    }, op.tableRecordsOptions || {});

    tableRecordsOptions.tableOptions = Object.assign({
        scrollY: 'calc(100vh - 300px)'
    }, (op.tableRecordsOptions || {}).tableOptions || {});

    if (key_id === 'camelot_sources') {
        tableRecordsOptions.skipId = true;
        tableRecordsOptions.btn_batch_import = false;
    }

    const recordsTable = await __webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(null, 10));
    return await recordsTable.default(tableRecordsOptions);    
});

/***/ })

}]);