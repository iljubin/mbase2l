(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[17],{

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Accordion; });
const $panelGroup = id => $(`<div class="panel-group" id="${id}"></div>`);

const $panel = (parentId, title, index) =>
 $(`<div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#${parentId}" href="#${parentId + '-' + index}">
          ${title}
        </a>
      </h4>
    </div>
    <div id="${parentId + '-' + index}" class="panel-collapse collapse in">
      <div class="panel-body">
         
      </div>
    </div>
  </div>`);

/**
 * @param {object} op options
 * @param {string} op.id component id
 * @param {boolean} op.closeOthers 
 * @param {array<string>} op.panels
 * @param {boolean} op.headingPointer=true mouse pointer over whole header
 */

function Accordion (op={}) {
  this.id = op.id || ('aid-'+Math.random()).replace('0.','');

  this.onPanelRemove = op.onPanelRemove;

  op.headingPointer = op.headingPointer === undefined ? true : op.headingPointer;

  const $el = $panelGroup(op.closeOthers === false ? "" : this.id);
  this.$el = () => $el;
  if (!op.panels) op.panels = [];

  this.panels = [];

  op.panels.map((title, index) => {
    this.addPanel(title, index)
  });

  if (op.headingPointer) {
    $el.find('.panel-heading').css('cursor','pointer').on('click', function() {
      $(this).parent().find('.panel-collapse:first').collapse('toggle');
      return false;
    });
  }

  this.$panelGroup = $el;

  if (op.$parent) {
    op.$parent.append(this.$el());
  }
}

Accordion.prototype.addPanel = function(title, index) {
  if (index === undefined) {
    index = this.panels.length;
  }

  let $pdiv = $panel(this.id, title, index);
  this.$el().append($pdiv);
  this.panels.push({
      title: title,
      $panel: $pdiv,
      $body: $pdiv.find('.panel-body')
  });

  if (this.onPanelRemove) {
    const $btn = $('<button style="margin-top:-0.9em" type="button" class="close" aria-hidden="true"><span class="pficon pficon-delete"></span></button>');
    $pdiv.find('.panel-heading:first').append($btn);
    $btn.on('click', () => this.onPanelRemove($pdiv, this.$el()));
  }

}

Accordion.prototype.getPanel = function(title) {
  return this.panels.find(p => p.title === title);
}



/***/ })

}]);