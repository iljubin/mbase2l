(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[56],{

/***/ 55:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const legendHtml = rows => {
  return rows.map(row => {
    return `
    <div style="display:flex; font-size:1.5em">
        <div style="margin-top:1px; margin-right: 10px;width:16px;height:16px;background-color: ${row.color}"></div>
      
        <div style="margin-right: 10px;margin-top:-2px"><i data-id="${row.id}" class="fa fa-filter legend-item-filter" aria-hidden="true"></i></div>

        <div class="checkbox" style="margin-top:-2px; font-size:0.8em">
          <label style="display: inline;vertical-align: text-top"><input data-id="${row.id}" type="checkbox">${row.t_id || row.key_id}</label>
        </div>

    </div>
    `
  }).join('');
};

	var EventsLegend=function(op){

    if (op===undefined) op={};
    
    this._$el=$('<div/>');
			
		this._$el.html(legendHtml(op.rows));
    
    if (op.onChange) {
      this._$el.find('input').on('change', function() {
        const $this = $(this);
        op.onChange($this.data('id'), $this.prop('checked'));
      });
    }

    const filters = this._$el.find('.legend-item-filter');

    if (op.onDataFilter) {
      filters.on('click', function() {
        op.onDataFilter($(this).data('id'));
      });
    }
    else {
      filters.hide();
    }
	};
	
	EventsLegend.prototype.$el=function(){
		return this._$el;
	};
  
  EventsLegend.prototype.hideUnchecked=function(){
    this._$el.find(".row input:checkbox:not(:checked)").parent().parent().parent().parent().hide();
  };
  
  EventsLegend.prototype.disableCheckBoxes=function(){
    this._$el.find(".row input:checkbox").prop('disabled',true);
  };
	
	EventsLegend.prototype.val=function(a){
		if (a!==undefined) {
      var self=this;
      self._$el.find('input').prop('checked',false);
      $.each(a,function(i,id){
        self._$el.find("[data-id='"+id+"']").prop('checked',true);
      });
    }
    else{
      var checked=[];
      this._$el.find('input:checked').each(function(){
        checked.push($(this).attr('data-id'));
      });
      return checked;
    }
	};
  
  EventsLegend.prototype.enable=function(enable) {
    this._$el.find('input').prop('disabled',!enable);
  };
  
/* harmony default export */ __webpack_exports__["default"] = (EventsLegend);

/***/ })

}]);