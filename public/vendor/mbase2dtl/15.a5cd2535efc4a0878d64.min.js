(window["webpackJsonpmbase2modules"] = window["webpackJsonpmbase2modules"] || []).push([[15],{

/***/ 35:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _libs_exports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _app_globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/**
 * mbase2 settings: modules
 */




/* harmony default export */ __webpack_exports__["default"] = (async op => {

    const {$parent} = op;

    const [
        ComponentManager,
        utils
    ] = await Promise.all([
        _libs_exports__WEBPACK_IMPORTED_MODULE_0__["ComponentManager"](),
        _libs_exports__WEBPACK_IMPORTED_MODULE_0__["utils"]()
    ]);
        
///////////////////////////////////////////////////////////////////////////////////////////
        /**
         * double underscore before the key_name_id to prevent mixing with column names obtained from table (if variableAttribute key_name_id is not present in table it gets added to data array)
         */
    
    const variablesAttributes = [
        {
            key_data_type_id: 'text',
            key_name_id: '__row',
            t_name_id: 'row',
        },
        {
            key_data_type_id: 'text',
            key_name_id: '__column',
            t_name_id: 'column',
        },
        {
            key_data_type_id: 'text',
            key_name_id: '__value',
            t_name_id: 'value',
        },
        {
            key_data_type_id: 'text',
            key_name_id: '__variable',
            t_name_id: 'variable'
        },
        {
            key_data_type_id: 'text',
            key_name_id: '__error',
            t_name_id: 'error'
        }
        
    ];
    
    const tableRecordsOptions = {
        $parent: $parent,
        tableName: 'import_errors',
        url: _app_globals__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].apiRoot + '/import_errors',
        select: [{key: 'batch_id', value: op.batchId}],
        skipId: true,
        variablesAttributes: variablesAttributes,
        btn_add_record: false,
        btn_batch_import: false,
        disableEdit: true,
        data: op.data,
        preprocessTableData: (data, model) => {
            const ndata = [];
            data.map(d=>{
                const idata = Array.isArray(d.data) ? d.data : (JSON.parse(d.data || null) || []);
                Array.isArray(idata) && idata.map(d=>{
                    d = utils.jsonParse(d);
                    const nd = {};
                    nd.__error = d.error;
                    nd.__variable = d.variable;
                    nd.__value = d.value;
                    nd.__column = d.column;
                    nd.__row = d.row;
                    ndata.push(nd);
                });
                
            });
            console.log(data, ndata)
            return ndata;
        }
    }

    tableRecordsOptions.tableOptions = {
        scrollY: '65vh'
    }

    const recordsTable = await __webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(null, 10));
    recordsTable.default(tableRecordsOptions) 
});

/***/ })

}]);